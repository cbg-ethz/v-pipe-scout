version: '3'

services:
  # Redis service: Acts as both message broker and result backend for Celery
  redis:
    image: redis:7-alpine
    # Removed port exposure - Redis only needs to be accessible within Docker network
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword123}
    command: sh -c 'redis-server --appendonly yes --requirepass $$REDIS_PASSWORD'
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a $$REDIS_PASSWORD ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Streamlit app: The frontend web application
  streamlit:
    build:
      # Use the app directory as build context so environment.yml is available
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "9001:8000"
    volumes:
      - ./app:/app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-defaultpassword123}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-defaultpassword123}@redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword123}

  # Celery worker: Processes background tasks
  worker:
    build:
      # Use the worker subdirectory as build context so environment.yml is available
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - ./worker:/app
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-defaultpassword123}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-defaultpassword123}@redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword123}

volumes:
  redis-data:
