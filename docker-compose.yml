version: '3'

services:
  # Redis service: Acts as both message broker and result backend for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Streamlit app: The frontend web application
  streamlit:
    build:
      # Use the app directory as build context so environment.yml is available
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "80:8000"
    volumes:
      - ./app:/app
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # Celery worker: Processes background tasks
  worker:
    build:
      # Use the worker subdirectory as build context so environment.yml is available
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - ./worker:/app
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379

volumes:
  redis-data:
